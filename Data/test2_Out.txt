1	1	1	7	259	31	package
1	8	1	8	258	51	 
1	9	1	17	260	50	Question2
1	18	1	18	290	108	;
3	1	3	6	259	34	public
3	7	3	7	258	51	 
3	8	3	12	259	7	class
3	13	3	13	258	51	 
3	14	3	18	260	50	Array
3	19	3	19	258	51	 
3	20	3	20	289	100	{
4	1	4	1	258	51	 
4	2	4	2	258	51	 
4	3	4	3	258	51	 
4	4	4	4	258	51	 
4	5	4	10	260	50	String
4	11	4	11	285	102	[
4	12	4	12	285	103	]
4	13	4	13	258	51	 
4	14	4	17	260	50	week
4	18	4	18	258	51	 
4	19	4	19	272	110	=
4	20	4	20	258	51	 
4	21	4	23	259	29	new
4	24	4	24	258	51	 
4	25	4	30	260	50	String
4	31	4	31	285	102	[
4	32	4	32	285	103	]
4	33	4	33	289	100	{
4	34	4	41	265	60	"Sunday"
4	42	4	42	288	106	,
4	43	4	50	265	60	"Monday"
4	51	4	51	288	106	,
4	52	4	60	265	60	"Tuesday"
4	61	4	61	288	106	,
4	62	4	72	265	60	"Wednesday"
4	73	4	73	288	106	,
4	74	4	83	265	60	"Thursday"
4	84	4	84	288	106	,
4	85	4	92	265	60	"Friday"
4	93	4	93	288	106	,
4	94	4	103	265	60	"Saturday"
4	104	4	104	289	101	}
4	105	4	105	290	108	;
5	1	5	1	258	51	 
5	2	5	2	258	51	 
5	3	5	3	258	51	 
5	4	5	4	258	51	 
5	5	5	11	260	50	Integer
5	12	5	12	285	102	[
5	13	5	13	285	103	]
5	14	5	14	258	51	 
5	15	5	21	260	50	numbers
5	22	5	22	258	51	 
5	23	5	23	272	110	=
5	24	5	24	258	51	 
5	25	5	27	259	29	new
5	28	5	28	258	51	 
5	29	5	35	260	50	Integer
5	36	5	36	285	102	[
5	37	5	38	263	53	20
5	39	5	39	285	103	]
5	40	5	40	290	108	;
6	1	6	1	258	51	 
6	2	6	2	258	51	 
6	3	6	3	258	51	 
6	4	6	4	258	51	 
6	5	6	49	257	52	// array sums will be initialized when needed
7	1	7	1	258	51	 
7	2	7	2	258	51	 
7	3	7	3	258	51	 
7	4	7	4	258	51	 
7	5	7	11	260	50	Integer
7	12	7	12	285	102	[
7	13	7	13	285	103	]
7	14	7	14	258	51	 
7	15	7	18	260	50	sums
7	19	7	19	290	108	;
8	1	8	1	258	51	 
8	2	8	2	258	51	 
8	3	8	3	258	51	 
8	4	8	4	258	51	 
8	5	8	10	259	34	public
8	11	8	11	258	51	 
8	12	8	15	259	47	void
8	16	8	16	258	51	 
8	17	8	24	260	50	setArray
8	25	8	25	285	104	(
8	26	8	26	285	105	)
8	27	8	27	289	100	{
9	1	9	1	258	51	 
9	2	9	2	258	51	 
9	3	9	3	258	51	 
9	4	9	4	258	51	 
9	5	9	5	258	51	 
9	6	9	6	258	51	 
9	7	9	7	258	51	 
9	8	9	8	258	51	 
9	9	9	63	257	52	// use random to specify every element of array numbers
10	1	10	1	258	51	 
10	2	10	2	258	51	 
10	3	10	3	258	51	 
10	4	10	4	258	51	 
10	5	10	5	258	51	 
10	6	10	6	258	51	 
10	7	10	7	258	51	 
10	8	10	8	258	51	 
10	9	10	14	260	50	Random
10	15	10	15	258	51	 
10	16	10	21	260	50	random
10	22	10	22	258	51	 
10	23	10	23	272	110	=
10	24	10	24	258	51	 
10	25	10	27	259	29	new
10	28	10	28	258	51	 
10	29	10	34	260	50	Random
10	35	10	35	285	104	(
10	36	10	37	263	53	20
10	38	10	38	285	105	)
10	39	10	39	290	108	;
11	1	11	1	258	51	 
11	2	11	2	258	51	 
11	3	11	3	258	51	 
11	4	11	4	258	51	 
11	5	11	5	258	51	 
11	6	11	6	258	51	 
11	7	11	7	258	51	 
11	8	11	8	258	51	 
11	9	11	11	259	19	for
11	12	11	12	285	104	(
11	13	11	15	259	25	int
11	16	11	16	258	51	 
11	17	11	17	260	50	i
11	18	11	18	258	51	 
11	19	11	19	272	110	=
11	20	11	20	258	51	 
11	21	11	21	263	53	0
11	22	11	22	290	108	;
11	23	11	23	258	51	 
11	24	11	24	260	50	i
11	25	11	25	258	51	 
11	26	11	26	280	120	<
11	27	11	27	258	51	 
11	28	11	31	259	41	this
11	32	11	32	285	107	.
11	33	11	39	260	50	numbers
11	40	11	40	285	107	.
11	41	11	46	260	50	length
11	47	11	47	290	108	;
11	48	11	48	258	51	 
11	49	11	49	260	50	i
11	50	11	51	284	134	++
11	52	11	52	285	105	)
11	53	11	53	258	51	 
11	54	11	54	289	100	{
12	1	12	1	258	51	 
12	2	12	2	258	51	 
12	3	12	3	258	51	 
12	4	12	4	258	51	 
12	5	12	5	258	51	 
12	6	12	6	258	51	 
12	7	12	7	258	51	 
12	8	12	8	258	51	 
12	9	12	9	258	51	 
12	10	12	10	258	51	 
12	11	12	11	258	51	 
12	12	12	12	258	51	 
12	13	12	16	259	41	this
12	17	12	17	285	107	.
12	18	12	24	260	50	numbers
12	25	12	25	285	102	[
12	26	12	26	260	50	i
12	27	12	27	285	103	]
12	28	12	28	258	51	 
12	29	12	29	272	110	=
12	30	12	30	258	51	 
12	31	12	36	260	50	random
12	37	12	37	285	107	.
12	38	12	44	260	50	nextInt
12	45	12	45	285	104	(
12	46	12	47	263	53	45
12	48	12	48	285	105	)
12	49	12	49	258	51	 
12	50	12	50	282	112	-
12	51	12	51	258	51	 
12	52	12	53	263	53	20
12	54	12	54	290	108	;
13	1	13	1	258	51	 
13	2	13	2	258	51	 
13	3	13	3	258	51	 
13	4	13	4	258	51	 
13	5	13	5	258	51	 
13	6	13	6	258	51	 
13	7	13	7	258	51	 
13	8	13	8	258	51	 
13	9	13	9	289	101	}
14	1	14	1	258	51	 
14	2	14	2	258	51	 
14	3	14	3	258	51	 
14	4	14	4	258	51	 
14	5	14	5	289	101	}
15	1	15	1	258	51	 
15	2	15	2	258	51	 
15	3	15	3	258	51	 
15	4	15	4	258	51	 
15	5	15	10	259	34	public
15	11	15	11	258	51	 
15	12	15	18	260	50	Integer
15	19	15	19	258	51	 
15	20	15	27	260	50	minValue
15	28	15	28	285	104	(
15	29	15	35	260	50	Integer
15	36	15	36	285	102	[
15	37	15	37	285	103	]
15	38	15	38	258	51	 
15	39	15	39	260	50	n
15	40	15	40	285	105	)
15	41	15	41	289	100	{
16	1	16	1	258	51	 
16	2	16	2	258	51	 
16	3	16	3	258	51	 
16	4	16	4	258	51	 
16	5	16	5	258	51	 
16	6	16	6	258	51	 
16	7	16	7	258	51	 
16	8	16	8	258	51	 
16	9	16	15	260	50	Integer
16	16	16	16	258	51	 
16	17	16	19	260	50	min
16	20	16	20	258	51	 
16	21	16	21	272	110	=
16	22	16	22	258	51	 
16	23	16	23	260	50	n
16	24	16	24	285	102	[
16	25	16	25	263	53	0
16	26	16	26	285	103	]
16	27	16	27	290	108	;
17	1	17	1	258	51	 
17	2	17	2	258	51	 
17	3	17	3	258	51	 
17	4	17	4	258	51	 
17	5	17	5	258	51	 
17	6	17	6	258	51	 
17	7	17	7	258	51	 
17	8	17	8	258	51	 
17	9	17	11	259	19	for
17	12	17	12	285	104	(
17	13	17	19	260	50	Integer
17	20	17	20	258	51	 
17	21	17	21	260	50	x
17	22	17	22	258	51	 
17	23	17	23	273	146	:
17	24	17	24	258	51	 
17	25	17	25	260	50	n
17	26	17	26	285	105	)
17	27	17	27	289	100	{
18	1	18	1	258	51	 
18	2	18	2	258	51	 
18	3	18	3	258	51	 
18	4	18	4	258	51	 
18	5	18	5	258	51	 
18	6	18	6	258	51	 
18	7	18	7	258	51	 
18	8	18	8	258	51	 
18	9	18	9	258	51	 
18	10	18	10	258	51	 
18	11	18	11	258	51	 
18	12	18	12	258	51	 
18	13	18	70	257	52	// use an iterator to traverse the array to find the value
19	1	19	1	258	51	 
19	2	19	2	258	51	 
19	3	19	3	258	51	 
19	4	19	4	258	51	 
19	5	19	5	258	51	 
19	6	19	6	258	51	 
19	7	19	7	258	51	 
19	8	19	8	258	51	 
19	9	19	9	258	51	 
19	10	19	10	258	51	 
19	11	19	11	258	51	 
19	12	19	12	258	51	 
19	13	19	14	259	21	if
19	15	19	15	285	104	(
19	16	19	16	260	50	x
19	17	19	17	258	51	 
19	18	19	18	280	120	<
19	19	19	19	258	51	 
19	20	19	22	260	50	min
19	23	19	23	285	105	)
19	24	19	24	289	100	{
20	1	20	1	258	51	 
20	2	20	2	258	51	 
20	3	20	3	258	51	 
20	4	20	4	258	51	 
20	5	20	5	258	51	 
20	6	20	6	258	51	 
20	7	20	7	258	51	 
20	8	20	8	258	51	 
20	9	20	9	258	51	 
20	10	20	10	258	51	 
20	11	20	11	258	51	 
20	12	20	12	258	51	 
20	13	20	13	258	51	 
20	14	20	14	258	51	 
20	15	20	15	258	51	 
20	16	20	16	258	51	 
20	17	20	19	260	50	min
20	20	20	20	258	51	 
20	21	20	21	272	110	=
20	22	20	22	258	51	 
20	23	20	23	260	50	x
20	24	20	24	290	108	;
21	1	21	1	258	51	 
21	2	21	2	258	51	 
21	3	21	3	258	51	 
21	4	21	4	258	51	 
21	5	21	5	258	51	 
21	6	21	6	258	51	 
21	7	21	7	258	51	 
21	8	21	8	258	51	 
21	9	21	9	258	51	 
21	10	21	10	258	51	 
21	11	21	11	258	51	 
21	12	21	12	258	51	 
21	13	21	13	289	101	}
22	1	22	1	258	51	 
22	2	22	2	258	51	 
22	3	22	3	258	51	 
22	4	22	4	258	51	 
22	5	22	5	258	51	 
22	6	22	6	258	51	 
22	7	22	7	258	51	 
22	8	22	8	258	51	 
22	9	22	9	289	101	}
23	1	23	1	258	51	 
23	2	23	2	258	51	 
23	3	23	3	258	51	 
23	4	23	4	258	51	 
23	5	23	5	258	51	 
23	6	23	6	258	51	 
23	7	23	7	258	51	 
23	8	23	8	258	51	 
23	9	23	14	259	35	return
23	15	23	15	258	51	 
23	16	23	18	260	50	min
23	19	23	19	290	108	;
24	1	24	1	258	51	 
24	2	24	2	258	51	 
24	3	24	3	258	51	 
24	4	24	4	258	51	 
24	5	24	5	289	101	}
25	1	25	1	258	51	 
25	2	25	2	258	51	 
25	3	25	3	258	51	 
25	4	25	4	258	51	 
25	5	25	10	259	34	public
25	11	25	11	258	51	 
25	12	25	15	259	47	void
25	16	25	16	258	51	 
25	17	25	30	260	50	cumulativeSums
25	31	25	31	285	104	(
25	32	25	32	285	105	)
25	33	25	33	289	100	{
26	1	26	1	258	51	 
26	2	26	2	258	51	 
26	3	26	3	258	51	 
26	4	26	4	258	51	 
26	5	26	5	258	51	 
26	6	26	6	258	51	 
26	7	26	7	258	51	 
26	8	26	8	258	51	 
26	9	26	15	260	50	Integer
26	16	26	16	258	51	 
26	17	26	19	260	50	sum
26	20	26	20	258	51	 
26	21	26	21	272	110	=
26	22	26	22	258	51	 
26	23	26	23	263	53	0
26	24	26	24	290	108	;
27	1	27	1	258	51	 
27	2	27	2	258	51	 
27	3	27	3	258	51	 
27	4	27	4	258	51	 
27	5	27	5	258	51	 
27	6	27	6	258	51	 
27	7	27	7	258	51	 
27	8	27	8	258	51	 
27	9	27	12	260	50	sums
27	13	27	13	258	51	 
27	14	27	14	272	110	=
27	15	27	15	258	51	 
27	16	27	18	259	29	new
27	19	27	19	258	51	 
27	20	27	26	260	50	Integer
27	27	27	27	285	102	[
27	28	27	31	259	41	this
27	32	27	32	285	107	.
27	33	27	39	260	50	numbers
27	40	27	40	285	107	.
27	41	27	46	260	50	length
27	47	27	47	285	103	]
27	48	27	48	290	108	;
28	1	28	1	258	51	 
28	2	28	2	258	51	 
28	3	28	3	258	51	 
28	4	28	4	258	51	 
28	5	28	5	258	51	 
28	6	28	6	258	51	 
28	7	28	7	258	51	 
28	8	28	8	258	51	 
28	9	28	11	259	19	for
28	12	28	12	285	104	(
28	13	28	15	259	25	int
28	16	28	16	258	51	 
28	17	28	17	260	50	i
28	18	28	18	258	51	 
28	19	28	19	272	110	=
28	20	28	20	258	51	 
28	21	28	21	263	53	0
28	22	28	22	290	108	;
28	23	28	23	258	51	 
28	24	28	24	260	50	i
28	25	28	25	258	51	 
28	26	28	26	280	120	<
28	27	28	27	258	51	 
28	28	28	31	260	50	sums
28	32	28	32	285	107	.
28	33	28	38	260	50	length
28	39	28	39	290	108	;
28	40	28	40	258	51	 
28	41	28	41	260	50	i
28	42	28	43	284	134	++
28	44	28	44	285	105	)
28	45	28	45	289	100	{
29	1	29	1	258	51	 
29	2	29	2	258	51	 
29	3	29	3	258	51	 
29	4	29	4	258	51	 
29	5	29	5	258	51	 
29	6	29	6	258	51	 
29	7	29	7	258	51	 
29	8	29	8	258	51	 
29	9	29	9	258	51	 
29	10	29	10	258	51	 
29	11	29	11	258	51	 
29	12	29	12	258	51	 
29	13	29	15	260	50	sum
29	16	29	16	258	51	 
29	17	29	18	272	129	+=
29	19	29	19	258	51	 
29	20	29	26	260	50	numbers
29	27	29	27	285	102	[
29	28	29	28	260	50	i
29	29	29	29	285	103	]
29	30	29	30	290	108	;
30	1	30	1	258	51	 
30	2	30	2	258	51	 
30	3	30	3	258	51	 
30	4	30	4	258	51	 
30	5	30	5	258	51	 
30	6	30	6	258	51	 
30	7	30	7	258	51	 
30	8	30	8	258	51	 
30	9	30	9	258	51	 
30	10	30	10	258	51	 
30	11	30	11	258	51	 
30	12	30	12	258	51	 
30	13	30	16	260	50	sums
30	17	30	17	285	102	[
30	18	30	18	260	50	i
30	19	30	19	285	103	]
30	20	30	20	258	51	 
30	21	30	21	272	110	=
30	22	30	22	258	51	 
30	23	30	25	260	50	sum
30	26	30	26	290	108	;
31	1	31	1	258	51	 
31	2	31	2	258	51	 
31	3	31	3	258	51	 
31	4	31	4	258	51	 
31	5	31	5	258	51	 
31	6	31	6	258	51	 
31	7	31	7	258	51	 
31	8	31	8	258	51	 
31	9	31	9	289	101	}
32	1	32	1	258	51	 
32	2	32	2	258	51	 
32	3	32	3	258	51	 
32	4	32	4	258	51	 
32	5	32	5	289	101	}
33	1	33	1	258	51	 
33	2	33	2	258	51	 
33	3	33	3	258	51	 
33	4	33	4	258	51	 
33	5	33	10	259	34	public
33	11	33	11	258	51	 
33	12	33	17	259	37	static
33	18	33	18	258	51	 
33	19	33	22	259	47	void
33	23	33	23	258	51	 
33	24	33	27	260	50	main
33	28	33	28	285	104	(
33	29	33	34	260	50	String
33	35	33	35	285	102	[
33	36	33	36	285	103	]
33	37	33	37	258	51	 
33	38	33	41	260	50	args
33	42	33	42	285	105	)
33	43	33	43	289	100	{
34	1	34	1	258	51	 
34	2	34	2	258	51	 
34	3	34	3	258	51	 
34	4	34	4	258	51	 
34	5	34	5	258	51	 
34	6	34	6	258	51	 
34	7	34	7	258	51	 
34	8	34	8	258	51	 
34	9	34	13	260	50	Array
34	14	34	14	258	51	 
34	15	34	18	260	50	test
34	19	34	19	258	51	 
34	20	34	20	272	110	=
34	21	34	21	258	51	 
34	22	34	24	259	29	new
34	25	34	25	258	51	 
34	26	34	30	260	50	Array
34	31	34	31	285	104	(
34	32	34	32	285	105	)
34	33	34	33	290	108	;
35	1	35	1	258	51	 
35	2	35	2	258	51	 
35	3	35	3	258	51	 
35	4	35	4	258	51	 
35	5	35	5	258	51	 
35	6	35	6	258	51	 
35	7	35	7	258	51	 
35	8	35	8	258	51	 
35	9	35	14	260	50	System
35	15	35	15	285	107	.
35	16	35	18	260	50	out
35	19	35	19	285	107	.
35	20	35	26	260	50	println
35	27	35	27	285	104	(
35	28	35	46	265	60	"the string array "
35	47	35	47	258	51	 
35	48	35	48	282	111	+
35	49	35	49	258	51	 
35	50	35	55	260	50	Arrays
35	56	35	56	285	107	.
35	57	35	64	260	50	toString
35	65	35	65	285	104	(
35	66	35	69	260	50	test
35	70	35	70	285	107	.
35	71	35	74	260	50	week
35	75	35	75	285	105	)
35	76	35	76	285	105	)
35	77	35	77	290	108	;
36	1	36	1	258	51	 
36	2	36	2	258	51	 
36	3	36	3	258	51	 
36	4	36	4	258	51	 
36	5	36	5	258	51	 
36	6	36	6	258	51	 
36	7	36	7	258	51	 
36	8	36	8	258	51	 
36	9	36	12	260	50	test
36	13	36	13	285	107	.
36	14	36	21	260	50	setArray
36	22	36	22	285	104	(
36	23	36	23	285	105	)
36	24	36	24	290	108	;
37	1	37	1	258	51	 
37	2	37	2	258	51	 
37	3	37	3	258	51	 
37	4	37	4	258	51	 
37	5	37	5	258	51	 
37	6	37	6	258	51	 
37	7	37	7	258	51	 
37	8	37	8	258	51	 
37	9	37	14	260	50	System
37	15	37	15	285	107	.
37	16	37	18	260	50	out
37	19	37	19	285	107	.
37	20	37	26	260	50	println
37	27	37	27	285	104	(
37	28	37	43	265	60	"the int array "
37	44	37	44	258	51	 
37	45	37	45	282	111	+
37	46	37	46	258	51	 
37	47	37	52	260	50	Arrays
37	53	37	53	285	107	.
37	54	37	61	260	50	toString
37	62	37	62	285	104	(
37	63	37	66	260	50	test
37	67	37	67	285	107	.
37	68	37	74	260	50	numbers
37	75	37	75	285	105	)
37	76	37	76	285	105	)
37	77	37	77	290	108	;
38	1	38	1	258	51	 
38	2	38	2	258	51	 
38	3	38	3	258	51	 
38	4	38	4	258	51	 
38	5	38	5	258	51	 
38	6	38	6	258	51	 
38	7	38	7	258	51	 
38	8	38	8	258	51	 
38	9	38	14	260	50	System
38	15	38	15	285	107	.
38	16	38	18	260	50	out
38	19	38	19	285	107	.
38	20	38	26	260	50	println
38	27	38	27	285	104	(
38	28	38	47	265	60	"the minimum value "
38	48	38	48	258	51	 
38	49	38	49	282	111	+
38	50	38	50	258	51	 
38	51	38	54	260	50	test
38	55	38	55	285	107	.
38	56	38	63	260	50	minValue
38	64	38	64	285	104	(
38	65	38	68	260	50	test
38	69	38	69	285	107	.
38	70	38	76	260	50	numbers
38	77	38	77	285	105	)
38	78	38	78	285	105	)
38	79	38	79	290	108	;
39	1	39	1	258	51	 
39	2	39	2	258	51	 
39	3	39	3	258	51	 
39	4	39	4	258	51	 
39	5	39	5	258	51	 
39	6	39	6	258	51	 
39	7	39	7	258	51	 
39	8	39	8	258	51	 
39	9	39	12	260	50	test
39	13	39	13	285	107	.
39	14	39	27	260	50	cumulativeSums
39	28	39	28	285	104	(
39	29	39	29	285	105	)
39	30	39	30	290	108	;
40	1	40	1	258	51	 
40	2	40	2	258	51	 
40	3	40	3	258	51	 
40	4	40	4	258	51	 
40	5	40	5	258	51	 
40	6	40	6	258	51	 
40	7	40	7	258	51	 
40	8	40	8	258	51	 
40	9	40	14	260	50	System
40	15	40	15	285	107	.
40	16	40	18	260	50	out
40	19	40	19	285	107	.
40	20	40	26	260	50	println
40	27	40	27	285	104	(
40	28	40	43	265	60	"the sum array "
40	44	40	44	258	51	 
40	45	40	45	282	111	+
40	46	40	46	258	51	 
40	47	40	52	260	50	Arrays
40	53	40	53	285	107	.
40	54	40	61	260	50	toString
40	62	40	62	285	104	(
40	63	40	66	260	50	test
40	67	40	67	285	107	.
40	68	40	71	260	50	sums
40	72	40	72	285	105	)
40	73	40	73	285	105	)
40	74	40	74	290	108	;
41	1	41	1	258	51	 
41	2	41	2	258	51	 
41	3	41	3	258	51	 
41	4	41	4	258	51	 
41	5	41	5	289	101	}
42	1	42	1	289	101	}
